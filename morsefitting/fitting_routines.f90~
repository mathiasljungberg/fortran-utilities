
    subroutine morsefreq(d,a,my,freq)
      use parameters
      implicit none
!     rutinen beräknar frekvensen för morsepotential med parameterarna
!     d =D och a =alfa, my är reducerade massan 
!     amu=1.659913245226400e-27, gammal definition
!     hartree konstanten uppdaterades 11/8 -06
!      real(8),parameter:: hbar=1.05457168e-34,amu=1.66053873e-27, &
!           pi = 3.14159265,c=2.99792458e8,hartree=4.35974418e-18    
      real(8),intent(in):: d,a,my
      real(8),intent(out)::freq
      real(8):: f,t
      
      F=d*hartree/(2*pi*hbar*c)
      T=a*1.0e10*hbar/sqrt(2*amu*my*d*hartree)
      
      freq = 2*F*T - F*(T**2)*((1.5)**2-0.25)

      freq=freq/100

      return
    end subroutine morsefreq


 subroutine harmfreq(d,a,my,freq)
      use parameters
      implicit none
!     rutinen beräknar frekvensen för morsepotential med parameterarna
!     d =D och a =alfa, my är reducerade massan 
!     amu=1.659913245226400e-27, gammal definition
!     hartree konstanten uppdaterades 11/8 -06
!      real(8),parameter:: hbar=1.05457168e-34,amu=1.66053873e-27, &
!           pi = 3.14159265,c=2.99792458e8,hartree=4.35974418e-18    
      real(8),intent(in):: d,a,my
      real(8),intent(out)::freq
      real(8):: D_SI,a_SI,my_SI
      
      D_SI = d*hartree
      a_SI = a*1.0e10
      my_SI = my*amu

      freq = sqrt(2.*D_SI/my_SI)*a_SI*cm*hbar

      return
    end subroutine harmfreq


subroutine coeff(d,a,p2,p3,p4)
      use parameters
      implicit none
!     rutinen beräknar 2:a ,3:e och 4:e koefficienterna i taylorutvecklingen 
!     p2 [Hartree*Å-2], p3 [Hartree*Å-3],p4 [Hartree*Å-4]
!     derivatorna är p2*2 p3*6 och p4*24 
!     d =D och a =alfa, my är reducerade massan 
!     amu=1.659913245226400e-27, gammal definition
!     hartree konstanten uppdaterades 11/8 -06
!      real(8),parameter:: hbar=1.05457168e-34,amu=1.66053873e-27, &
!           pi = 3.14159265,c=2.99792458e8,hartree=4.35974418e-18    
      real(8),intent(in):: d,a
      real(8),intent(out)::p2,p3,p4
!      real(8):: D_SI,a_SI,my_SI
      
!     D_SI = d*hartree
!     a_SI = a*1.0e10
!     my_SI = my*amu

!      freq = sqrt(2.*D_SI/my_SI)*a_SI*cm*hbar
      p2 =  d*a**2
      p3 = -d*a**3
      p4 =  (7./12.)*d*a**4

      return
    end subroutine coeff





    subroutine perturb(p2,p3,p4,my,freq,corr2,corr3,corr4)
      use parameters
      implicit none
      !     rutinen beräknar frekvensen för morsepotential med parameterarna
      !     d =D och a =alfa, my är reducerade massan 
      !     amu=1.659913245226400e-27, gammal definition
      !     hartree konstanten uppdaterades 11/8 -06
      !      real(8),parameter:: hbar=1.05457168e-34,amu=1.66053873e-27, &
      !           pi = 3.14159265,c=2.99792458e8,hartree=4.35974418e-18    
      !passed variables
      real(8),intent(in):: p2,p3,p4,my
      real(8),intent(out)::freq,corr2,corr3,corr4
      ! local variables
      real(8):: c3,c4,my_SI,omega 
      real(8),dimension(2)::E,E_3d,E_4d,E_harm
      integer:: n
      
      my_SI = my*amu
      
      omega =  sqrt(2*p2*1e20*hartree/my_SI)
      c3 = p3*1.d30*hartree      
      c4 = p4*1.d40*hartree

      do n=0,1
         E_harm(n+1) = hbar*omega*(n+0.5)
         E_3d(n+1)= -(15./4.)*(c3**2)*((hbar**2)/(omega**4*my_SI**3))*(n**2 +n + 11./30.)
         E_4d(n+1) = (3./2.)*c4*(hbar/(omega*my_SI))**2*(n**2 +n +0.5)
         
         E(n+1) = E_harm(n+1) + E_3d(n+1) + E_4d(n+1)
         
         
      end do
      
      
      corr2 =hbar*omega*cm
      freq = (E(2)-E(1))*cm
      corr3 = (E_3d(2)-E_3d(1))*cm
      corr4 = (E_4d(2)-E_4d(1))*cm

      return
      
    end subroutine perturb

